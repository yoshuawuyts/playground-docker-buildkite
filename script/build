#!/bin/bash

version="$(jq '.version' < package.json | sed 's/"//g')"
commit="$(git log --oneline | head -1 | awk '{ print $1 }')"
name="yoshuawuyts/playground-docker-buildkite"
date="$(date --iso-8601=seconds)"
username="yoshuawuyts"

run_build () {
  sudo docker build -f "./docker/base/Dockerfile" \
    -t "$name:base" \
    -t "$name:$version-base" \
    --label "date=$date" \
    --label "commit=$commit" \
    --label "dockerfile=Dockerfile" \
    --label "repository=https://github.com/$username/$name" \
    .
}

run_optimize () {
  sudo docker build -f "./docker/optimize/Dockerfile" \
    -t "$name:latest" \
    -t "$name:$version" \
    --label "date=$date" \
    --label "commit=$commit" \
    --label "dockerfile=Dockerfile" \
    --label "repository=https://github.com/$username/$name" \
    .
}

run_publish () {
  docker login --username="$DOCKER_USERNAME" --password="$DOCKER_PASSWORD";
  docker push "$name:latest"
  docker push "$name:base"
  docker push "$name:$version"
  docker push "$name:$version-dev"
  docker logout
}

usage () {
  printf 'Usage: script/build [options]'
}

# set CLI flags
args="$(getopt pho "$*")"
[ $? -ne 0 ] && { usage; exit 2; }
eval set -- "$args"

# parse CLI flags
while true; do
  case "$1" in
    -h ) usage ;;
    -o ) shift; run_optimize; break ;;
    -p ) shift; run_publish; break ;;
    * ) shift; run_build; break ;;
  esac
done
